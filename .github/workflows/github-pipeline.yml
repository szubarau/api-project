name: API Test Automation

on:
  workflow_dispatch:
    inputs:
      subscription:
        description: 'Test scope to run'
        required: true
        default: 'regression'
        type: choice
        options:
          - smoke
          - regression

  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '**.docs'

  schedule:
    - cron: '0 8 * * 1-5'  # Weekdays at 8:00 AM UTC

permissions:
  contents: read

env:
  PYTHON_VERSION: '3.9'
  ALLURE_RESULTS: 'allure-results'
  ALLURE_REPORT: 'allure-report'

jobs:
  test:
    name: Run API Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pytest
        id: pytest
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "Running tests with scope: ${{ github.event.inputs.subscription }}"
            pytest -m ${{ github.event.inputs.subscription }} \
                   --alluredir=${{ env.ALLURE_RESULTS }} \
                   --junitxml=test-results.xml \
                   --disable-warnings \
                   -v
          else
            echo "Running full test suite"
            pytest --alluredir=${{ env.ALLURE_RESULTS }} \
                   --junitxml=test-results.xml \
                   --disable-warnings \
                   -v
          fi

      - name: Generate Allure report
        if: always()
        uses: simple-elf/allure-report-action@v1
        with:
          allure_results: ${{ env.ALLURE_RESULTS }}
          allure_report: ${{ env.ALLURE_REPORT }}
          ignore_errors: true

      - name: Upload Allure report as artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: ${{ env.ALLURE_REPORT }}
          retention-days: 7

      - name: Publish JUnit test results
        if: always()
        uses: mikepenz/action-junit-report@v5
        with:
          report_paths: 'test-results.xml'
          require_tests: true